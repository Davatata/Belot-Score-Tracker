// global variable to store current row during changes
var curRow = null;
var team1 = "Team1";
var team2 = "Team2";
var t1 = "T1";
var t2 = "T2";

function addRow(contract, attacker, suit, special, team1s, 
	team1b, team2s, team2b){
	// find the table and its last row
	var myTable = document.getElementById("score_table");
    var currentIndex = myTable.rows.length;
    var currentRow = myTable.insertRow(-1);

    // create 

}

$('#myform').submit(function () {
	/*
	var good = goodForm();
	if(!good) return false; 
	else{
		createRow();

		//$("#newBet").foundation('close');
		return false;
	}
	*/
});

// When a score row is clicked
$('.bet_row').click(function() {
	curRow = $(this);
	showRowModal();
});


function showRowModal(){
	$("#contract_amt").val(parseInt(curRow.find(':nth-child(1)').text()));
	$("#attacker_chosen").val((curRow.find(':nth-child(5)').text()));
	// suit -> (heart, diamo, clubs, spade)
	var suit = curRow.find(':nth-child(2)').html().substring(17,22);
	if(suit=="") suit = "A";
	console.log(suit);
	$("#suit_chosen").val(suit);
	$("#special_chosen").val((curRow.find(':nth-child(6)').text()));
	$("#team1_points").val(parseInt(curRow.find(':nth-child(7)').text()));
	$("#team1_bonus").val(parseInt(curRow.find(':nth-child(8)').text()));
	$("#team2_points").val(parseInt(curRow.find(':nth-child(9)').text()));
	$("#team2_bonus").val(parseInt(curRow.find(':nth-child(10)').text()));
	$("#newBet").foundation('open');
	
}

function closeTopBar(){
	$(".top-bar").toggle();
}

function newGame(){

}

function newBet(){
	resetModal();
}

// update these checks with hakop
function checkBet(contract_amt, attacker_chosen, suit_chosen, special_chosen, team1_points, team1_bonus, team2_points, team2_bonus){
	var goodBet = true;
	$("#contract_amt").removeClass("is-invalid-input");
	$("#attacker_chosen").removeClass("is-invalid-input");
	$("#suit_chosen").removeClass("is-invalid-input");
	$("#team1_points").removeClass("is-invalid-input");
	$("#team2_points").removeClass("is-invalid-input");
	$("#team1_bonus").removeClass("is-invalid-input");
	$("#team2_bonus").removeClass("is-invalid-input");


	if(isNaN(contract_amt) || contract_amt < 80 || contract_amt > 470) 		{ $("#contract_amt").addClass("is-invalid-input"); goodBet=false; }
	if(attacker_chosen == "" || attacker_chosen == null) 					{ $("#attacker_chosen").addClass("is-invalid-input"); goodBet=false; }
	if(suit_chosen == "" || suit_chosen == null) 		 					{ $("#suit_chosen").addClass("is-invalid-input"); goodBet=false; }
	if(isNaN(team1_points) || team1_points < 0 || team1_points > 160) 		{ $("#team1_points").addClass("is-invalid-input"); goodBet=false; }
	if(isNaN(team2_points) || team2_points < 0 || team2_points > 160) 		{ $("#team2_points").addClass("is-invalid-input"); goodBet=false; }
	if(team1_points+team2_points != 160)									{ $("#team1_points, #team2_points").addClass("is-invalid-input"); goodBet=false; }
	if(team1_bonus < 0 || team1_bonus > 470)								{ $("#team1_bonus").addClass("is-invalid-input"); goodBet=false; }
	if(team2_bonus < 0 || team2_bonus > 470)								{ $("#team2_bonus").addClass("is-invalid-input"); goodBet=false; }

	if(goodBet) return true;

	return false;

}

function createRow(){
	var contract_amt = parseInt($("#contract_amt").val());
	var attacker_chosen = $("#attacker_chosen").val();
	var suit_chosen = $("#suit_chosen").val();
	var special_chosen = $("#special_chosen").val();
	var team1_points = parseInt($("#team1_points").val());
	var team1_bonus = parseInt($("#team1_bonus").val());
	var team2_points = parseInt($("#team2_points").val());
	var team2_bonus = parseInt($("#team2_bonus").val());

	if(isNaN(team1_bonus)) team1_bonus = 0;
	if(isNaN(team2_bonus)) team2_bonus = 0;

	if(!checkBet(contract_amt, attacker_chosen, suit_chosen, special_chosen, team1_points, team1_bonus, team2_points, team2_bonus)) return;
	else{

		var team1_total = team1_points + team1_bonus;
		var team2_total = team2_points + team2_bonus;
		console.log(team1_total);
		console.log(team2_total);
		var teamToColor1 = '<td class="text-center">'+ team1_total;
        var teamToColor2 = '<td class="text-center">'+ team2_total;
        var suitDisplay = '<td class="text-center"><img src="images/'+ suit_chosen +'.png"/></td>';
        if(suit_chosen == "A"){
        	suitDisplay = '<td class="text-center">A</td>';
        }

        if(attacker_chosen == team1 || attacker_chosen == "Team1"){
        	if(team1_total >= contract_amt) {
        		teamToColor1 = '<td class="text-center bet_success">' + team1_total;;
        	}
        	else{
        		teamToColor1 = '<td class="text-center bet_fail">' + team1_total;;
        	}
        }
        else{
        	if(team2_total >= contract_amt) {
        		teamToColor2 = '<td class="text-center bet_success">' + team2_total;; 
        	}
        	else{
        		teamToColor2 = '<td class="text-center bet_fail">' + team2_total;; 
        	}
        }

		var newRowHtml = '<tr class="bet_row back_white">'+
							'<td class="text-center">'+contract_amt+ 
	                         suitDisplay +
	                         teamToColor1 +
	                         teamToColor2 +
	                         '<td class="hidden">'+ attacker_chosen +
	                         '<td class="hidden">'+ special_chosen +
	                         '<td class="hidden">'+ team1_points +
	                         '<td class="hidden">'+ team1_bonus +
	                         '<td class="hidden">'+ team2_points +
	                         '<td class="hidden">'+ team2_bonus +
                    	 '</tr>';

        
		$('#score_table > tbody:last').append(newRowHtml);
		$("#newBet").foundation('close');

	}
}

function resetModal(){
	$("#reset_button").trigger("click");
	curRow = null;
}

function getSuit(suit){
	var suit_img = "";
	switch(suit){
		case "heart":
			suit_img = '<img src="images/heart.png" />';
			break;
		case "spade":
			suit_img = '<img src="images/spade.png" />';
			break;
		case "clubs":
			suit_img = '<img src="images/clubs.png" />';
			break;
		case "diamo":
			suit_img = '<img src="images/diamo.png" />';
			break;
	}

	return suit_img;
}


function goodForm(){
	if( $("#contract_amt").hasClass('is-invalid-input') || 
		$("#attacker_chosen").hasClass('is-invalid-input') || 
		$("#suit_chosen").hasClass('is-invalid-input') || 
		$("#team1_points").hasClass('is-invalid-input') || 
		$("#team2_points").hasClass('is-invalid-input')
		){
			return false;
		}
	else{
		return true;
	}
}

function randomize(){
	var contract_amt = rand_10(30, 200);
	$("#contract_amt").val(contract_amt);

	var attacker_chosen = '';
	var pickTeam = Math.floor(Math.random() * 2) + 1;
	if(pickTeam == 1){ attacker_chosen = team1; }
	else{ attacker_chosen = team2; }
	$("#attacker_chosen").val(attacker_chosen);

	var suit_chosen = '';
	var suit_random = Math.floor(Math.random() * 6) + 1;
	if(suit_random == 1) suit_chosen = "spade";
	else if(suit_random == 2) suit_chosen = "diamo";
	else if(suit_random == 3) suit_chosen = "clubs";
	else if(suit_random == 4) suit_chosen = "heart";
	else if(suit_random == 5) suit_chosen = "A";
	else if(suit_random == 6) suit_chosen = "";
	$("#suit_chosen").val(suit_chosen);

	var special_random = Math.floor(Math.random() * 3) + 1;
	var special_chosen = '';
	if(special_random == 1) special_chosen = "";
	else if(special_random == 2) special_chosen = "Coincher";
	else if(special_random == 3) special_chosen = "Sur-Coincher";
	$("#special_chosen").val(special_chosen);

	var team1_points = rand_10(0, 170);
	$("#team1_points").val(team1_points);
	var team1_bonus = rand_10(25, 50);
	$("#team1_bonus").val(team1_bonus);
	var team2_points = 160 - team1_points;
	$("#team2_points").val(team2_points);
	var team2_bonus = rand_10(25, 50);
	$("#team2_bonus").val(team2_bonus);
}

// random number from [min - max] thats divisible by 10
function rand_10(min, max){
    return Math.round((Math.random()*(max-min)+min)/10)*10;
}