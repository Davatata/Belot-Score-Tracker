// global variable to store current row during changes
var curRow = null;
var team1 = "Team1";
var team2 = "Team2";
var t1 = "T1";
var t2 = "T2";
var max_score = 500;
var team1_total_points = 0;
var team2_total_points = 0;


$( document ).ready(function() {
    if(readCookie("currentGame") == null){
    	$("#new_game_modal").foundation('open');
    }
});

$( "input" ).on('focus', function() {
  $(this).select();
});

$('#team1_points').on('blur', function() {
    var t1points = parseInt($('#team1_points').val());
    $('#team2_points').val(162-t1points);
});

$('#team2_points').on('blur', function() {
    var t2points = parseInt($('#team2_points').val());
    $('#team1_points').val(162-t2points);
});

function addRow(contract, attacker, suit, special, team1s, 
	team1b, team2s, team2b){
	// find the table and its last row
	var myTable = document.getElementById("score_table");
    var currentIndex = myTable.rows.length;
    var currentRow = myTable.insertRow(-1);

    // create 

}

function clearCookies(){
	eraseCookie("currentGame");
}

// When a score row is clicked
$('.bet_row').bind("click", function() {
	curRow = $(this);
	showRowModal();
});

function updateNames(){
	var goodNames = true;
	team1 = $("#team1_name").val();
	team2 = $("#team2_name").val();
	max_score = parseInt($("#winning_score").val());

	team1 = $.trim(team1);
	team2 = $.trim(team2);

	if(team1 == "" || team1 == null){
		$("#team1_name").addClass("is-invalid-input");
		goodNames = false;
	}
	else{
		$("#team1_name").removeClass("is-invalid-input");
	}
	if(team2 == "" || team2 == null){
		$("#team2_name").addClass("is-invalid-input");
		goodNames = false;
	}
	else{
		$("#team2_name").removeClass("is-invalid-input");
	}
	if(isNaN(max_score) || max_score <= 0){
		$("#winning_score").addClass("is-invalid-input");
		goodNames = false;
	}
	else{
		$("#winning_score").removeClass("is-invalid-input");
	}

	if(goodNames){
		$("#team_1").text(team1);
		$("#team_2").text(team2);
		$("#team1_option").text(team1);
		$("#team2_option").text(team2);
		$("#team1_option").val(team1);
		$("#team2_option").val(team2);
		$("#team1_bold").text(team1);
		$("#team2_bold").text(team2);

		createCookie("currentGame", "true", 1);
		
		$("#new_game_modal").foundation('close');
	}
}


function showRowModal(){
	$("#contract_amt").val(parseInt(curRow.find(':nth-child(1)').text()));
	$("#attacker_chosen").val((curRow.find(':nth-child(5)').text()));
	// suit -> (heart, diamo, clubs, spade)
	var suit = curRow.find(':nth-child(2)').html().substring(17,22);
	if(suit=="") suit = "NT";
	console.log(suit);
	$("#suit_chosen").val(suit);
	$("#special_chosen").val((curRow.find(':nth-child(6)').text()));
	$("#team1_points").val(parseInt(curRow.find(':nth-child(7)').text()));
	$("#team1_bonus").val(parseInt(curRow.find(':nth-child(8)').text()));
	$("#team2_points").val(parseInt(curRow.find(':nth-child(9)').text()));
	$("#team2_bonus").val(parseInt(curRow.find(':nth-child(10)').text()));
	$("#newBet").foundation('open');
	
}

function toggleTopBar(){
	$(".top-bar").toggle();
}

function newBet(){
	resetModal();
}

// update these checks with hakop
function checkBet(contract_amt, attacker_chosen, suit_chosen, special_chosen, team1_points, team1_bonus, team2_points, team2_bonus){
	var goodBet = true;
	$("#contract_amt").removeClass("is-invalid-input");
	$("#attacker_chosen").removeClass("is-invalid-input");
	$("#suit_chosen").removeClass("is-invalid-input");
	$("#team1_points").removeClass("is-invalid-input");
	$("#team2_points").removeClass("is-invalid-input");
	$("#team1_bonus").removeClass("is-invalid-input");
	$("#team2_bonus").removeClass("is-invalid-input");


	if(isNaN(contract_amt) || contract_amt < 80) 							{ $("#contract_amt").addClass("is-invalid-input"); goodBet=false; }
	if(attacker_chosen == "" || attacker_chosen == null) 					{ $("#attacker_chosen").addClass("is-invalid-input"); goodBet=false; }
	if(suit_chosen == "" || suit_chosen == null) 		 					{ $("#suit_chosen").addClass("is-invalid-input"); goodBet=false; }
	if(isNaN(team1_points) || team1_points < 0 || team1_points > 162) 		{ $("#team1_points").addClass("is-invalid-input"); goodBet=false; }
	if(isNaN(team2_points) || team2_points < 0 || team2_points > 162) 		{ $("#team2_points").addClass("is-invalid-input"); goodBet=false; }
	if(team1_points+team2_points != 162)									{ $("#team1_points, #team2_points").addClass("is-invalid-input"); goodBet=false; }
	if(team1_bonus < 0)														{ $("#team1_bonus").addClass("is-invalid-input"); goodBet=false; }
	if(team2_bonus < 0)														{ $("#team2_bonus").addClass("is-invalid-input"); goodBet=false; }

	if(team1_bonus != 0 && team2_bonus != 0){
		if(team1_bonus != 20 && team2_bonus != 20){
			$("#team1_bonus").addClass("is-invalid-input"); goodBet=false;
			$("#team2_bonus").addClass("is-invalid-input"); goodBet=false;
		}
	}

	if(goodBet) return true;

	return false;

}

function createRow(){
	var contract_amt = parseInt($("#contract_amt").val());
	var attacker_chosen = $("#attacker_chosen").val();
	var suit_chosen = $("#suit_chosen").val();
	var special_chosen = $("#special_chosen").val();
	var team1_points = parseInt($("#team1_points").val());
	var team1_bonus = parseInt($("#team1_bonus").val());
	var team2_points = parseInt($("#team2_points").val());
	var team2_bonus = parseInt($("#team2_bonus").val());

	if(isNaN(team1_bonus)) team1_bonus = 0;
	if(isNaN(team2_bonus)) team2_bonus = 0;

	if(!checkBet(contract_amt, attacker_chosen, suit_chosen, special_chosen, team1_points, team1_bonus, team2_points, team2_bonus)) return;
	else{

		var team1_total = 0;
		var team2_total = 0;
		var multiplier = 0;

		if(special_chosen == "Coincher"){
			multiplier = 2;
		}
		else if(special_chosen == "Sur-Coincher"){
			multiplier = 4;
		}

		// score calculation 
		if(attacker_chosen == team1){
			if(team1_points + team1_bonus < contract_amt){
				team1_total = 0;
				if(multiplier == 0){
					team2_total = 162 + team1_bonus + team2_bonus;
				}
				else{
					team2_total = contract_amt*multiplier + 162 + team1_bonus + team2_bonus;
				}
			}
			else{
				if(multiplier == 0){
					team1_total = team1_points + team1_bonus;
					team2_total = team2_points + team2_bonus;
				}
				else{
					team2_total = 0;
					team1_total = contract_amt*multiplier + 162 + team1_bonus + team2_bonus;
				}
			}
		}
		else{
			if(team2_points + team2_bonus < contract_amt){
				team2_total = 0;
				if(multiplier == 0){
					team1_total = 162 + team1_bonus + team2_bonus;
				}
				else{
					team1_total = contract_amt*multiplier + 162 + team1_bonus + team2_bonus;
				}
			}
			else{
				if(multiplier == 0){
					team1_total = team1_points + team1_bonus;
					team2_total = team2_points + team2_bonus;
				}
				else{
					team1_total = 0;
					team2_total = contract_amt*multiplier + 162 + team1_bonus + team2_bonus;
				}
			}
		}


		if(curRow != null) { 
			curRow.find(':nth-child(1)').text(contract_amt);
			curRow.find(':nth-child(5)').text(attacker_chosen);
			if(suit_chosen == "NT"){
				curRow.find(':nth-child(2)').text("NT");
			}
			else 
				curRow.find(':nth-child(2)').html('<img src="images/'+ suit_chosen +'.png"/>');
			
			curRow.find(':nth-child(3)').text(team1_total);
			curRow.find(':nth-child(4)').text(team2_total);
			curRow.find(':nth-child(6)').text(special_chosen);
			curRow.find(':nth-child(7)').text(team1_points);
			curRow.find(':nth-child(8)').text(team1_bonus);
			curRow.find(':nth-child(9)').text(team2_points);
			curRow.find(':nth-child(10)').text(team2_bonus);

			curRow.find(':nth-child(3)').removeClass('bet_success bet_fail');
			curRow.find(':nth-child(4)').removeClass('bet_success bet_fail');

			if(attacker_chosen == team1 || attacker_chosen == "Team1"){
				if(team1_total >= contract_amt) {
					curRow.find(':nth-child(3)').addClass('bet_success');
				}
				else{
					curRow.find(':nth-child(3)').addClass('bet_fail');
				}
			}
			else{
				if(team2_total >= contract_amt) {
					curRow.find(':nth-child(4)').addClass('bet_success');
				}
				else{
					curRow.find(':nth-child(4)').addClass('bet_fail');
				}
			}

			$("#newBet").foundation('close');
		}
		else{
			var teamToColor1 = '<td class="text-center team1_score">'+ team1_total;
	        var teamToColor2 = '<td class="text-center team2_score">'+ team2_total;
	        var suitDisplay = '<td class="text-center"><img src="images/'+ suit_chosen +'.png"/></td>';
	        
	        if(suit_chosen == "NT"){
	        	suitDisplay = '<td class="text-center">NT</td>';
	        }

	        if(attacker_chosen == team1 || attacker_chosen == "Team1"){
	        	if(team1_total >= contract_amt) {
	        		teamToColor1 = '<td class="text-center team1_score bet_success">' + team1_total;;
	        	}
	        	else{
	        		teamToColor1 = '<td class="text-center team1_score bet_fail">' + team1_total;;
	        	}
	        }
	        else{
	        	if(team2_total >= contract_amt) {
	        		teamToColor2 = '<td class="text-center team2_score bet_success">' + team2_total;; 
	        	}
	        	else{
	        		teamToColor2 = '<td class="text-center team2_score bet_fail">' + team2_total;; 
	        	}
	        }

			var newRowHtml = '<tr class="bet_row back_white">'+
								'<td class="text-center">'+contract_amt+ 
		                         suitDisplay +
		                         teamToColor1 +
		                         teamToColor2 +
		                         '<td class="hidden">'+ attacker_chosen +
		                         '<td class="hidden">'+ special_chosen +
		                         '<td class="hidden">'+ team1_points +
		                         '<td class="hidden">'+ team1_bonus +
		                         '<td class="hidden">'+ team2_points +
		                         '<td class="hidden">'+ team2_bonus +
	                    	 '</tr>';

	        
			$( newRowHtml ).insertBefore( "#score_row" );
			$('.bet_row').bind("click", function() {
				curRow = $(this);
				showRowModal();
			});
			$("#newBet").foundation('close');
		}

		calculateTotals();
	}

	checkGameOver();
}

function calculateTotals(){
	var team1_score = 0;
	var team2_score = 0;
	$("tr.bet_row").each(function() {
	    team1_score += parseInt($(this).find(".team1_score").text());
	    team2_score += parseInt($(this).find(".team2_score").text());
	    console.log(team1_score);
	    console.log(team2_score);
	});
	$("#team1_total_score").text(team1_score);
	$("#team2_total_score").text(team2_score);
}

function checkGameOver(){
	var team1_w = parseInt($("#team1_total_score").text());
	var team2_w = parseInt($("#team2_total_score").text());

	if(team1_w >= max_score && team2_w >= max_score){
		if(team1_w > team2_w){
			gameOver(team1, 1);
		}
		else{
			gameOver(team2, 2);
		}
	}
	else if(team1_w >= max_score){
		gameOver(team1, 1);

	}
	else if(team2_w >= max_score){
		gameOver(team2, 2);
		
	}
}

function gameOver(teamName, teamNum){
	$("#team"+teamNum+"_total_score").addClass('bet_success');
	$("#winner_span").text("Team " + teamName + " wins!");
	$("#win_modal").foundation('open');
	toggleTopBar();
	noClicks();
}

function noClicks(){
	$("tr.bet_row").each(function() {
	    $(this).addClass("inactive");
	});

	$("#new_bet_button").addClass("inactive");
}

function resetModal(){
	$("#reset_button").trigger("click");
	curRow = null;
}

function getSuit(suit){
	var suit_img = "";
	switch(suit){
		case "heart":
			suit_img = '<img src="images/heart.png" />';
			break;
		case "spade":
			suit_img = '<img src="images/spade.png" />';
			break;
		case "clubs":
			suit_img = '<img src="images/clubs.png" />';
			break;
		case "diamo":
			suit_img = '<img src="images/diamo.png" />';
			break;
	}

	return suit_img;
}

function randomize(){
	var contract_amt = rand_10(30, 200);
	$("#contract_amt").val(contract_amt);

	var attacker_chosen = '';
	var pickTeam = Math.floor(Math.random() * 2) + 1;
	if(pickTeam == 1){ attacker_chosen = team1; }
	else{ attacker_chosen = team2; }
	$("#attacker_chosen").val(attacker_chosen);

	var suit_chosen = '';
	var suit_random = Math.floor(Math.random() * 6) + 1;
	if(suit_random == 1) suit_chosen = "spade";
	else if(suit_random == 2) suit_chosen = "diamo";
	else if(suit_random == 3) suit_chosen = "clubs";
	else if(suit_random == 4) suit_chosen = "heart";
	else if(suit_random == 5) suit_chosen = "NT";
	else if(suit_random == 6) suit_chosen = "";
	$("#suit_chosen").val(suit_chosen);

	var special_random = Math.floor(Math.random() * 3) + 1;
	var special_chosen = '';
	if(special_random == 1) special_chosen = "";
	else if(special_random == 2) special_chosen = "Coincher";
	else if(special_random == 3) special_chosen = "Sur-Coincher";
	$("#special_chosen").val(special_chosen);

	var team1_points = rand_10(0, 170);
	$("#team1_points").val(team1_points);
	var team1_bonus = rand_10(0, 50);
	$("#team1_bonus").val(team1_bonus);
	var team2_points = 162 - team1_points;
	$("#team2_points").val(team2_points);
	var team2_bonus = rand_10(0, 50);
	$("#team2_bonus").val(team2_bonus);
}

// random number from [min - max] thats divisible by 10
function rand_10(min, max){
    return Math.round((Math.random()*(max-min)+min)/10)*10;
}

// cookie functions

function createCookie(name,value,days) {
    if (days) {
        var date = new Date();
        date.setTime(date.getTime()+(days*24*60*60*1000));
        var expires = "; expires="+date.toGMTString();
    }
    else var expires = "";
    document.cookie = name+"="+value+expires+"; path=/";
}

function readCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(';');
    for(var i=0;i < ca.length;i++) {
        var c = ca[i];
        while (c.charAt(0)==' ') c = c.substring(1,c.length);
        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
    }
    return null;
}

function eraseCookie(name) {
    createCookie(name,"",-1);
}